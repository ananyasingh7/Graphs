for (int i = 0; i<graph1.listOfNodes.size(); i++){
            System.out.println("size of neighbors of Node " + i + " is: " + graph1.listOfNodes.get(i).neighbors.size());
        }

        System.out.println("\n\n");
        System.out.println("Neighbors of node 1 are: ");
        for (int i = 0; i<graph1.listOfNodes.get(1).neighbors.size(); i++){
            System.out.println(graph1.listOfNodes.get(1).neighbors.get(i).value);
        }

        System.out.println("\n\n");
        System.out.println("Removing edge between 1 and 2");
        graph1.removeUndirectedEdge(graph1.listOfNodes.get(1), graph1.listOfNodes.get(2));
        System.out.println("After Removal");
        System.out.println("Neighbors of node 1 are: ");
        for (int i = 0; i<graph1.listOfNodes.get(1).neighbors.size(); i++){
            System.out.println(graph1.listOfNodes.get(1).neighbors.get(i).value);
        }

        System.out.println("\n\n");
        System.out.println("Removing edge between 4 and 3");
        graph1.removeUndirectedEdge(graph1.listOfNodes.get(4), graph1.listOfNodes.get(3));
        System.out.println("After Removal");
        System.out.println("Neighbors of node 4 are: ");
        for (int i = 0; i<graph1.listOfNodes.get(4).neighbors.size(); i++){
            System.out.println(graph1.listOfNodes.get(4).neighbors.get(i).value);
        }

        System.out.println("\n\n");
        System.out.println("Removing edge between 1 and 3");
        graph1.removeUndirectedEdge(graph1.listOfNodes.get(1), graph1.listOfNodes.get(3));
        System.out.println("After Removal");
        System.out.println("Neighbors of node 3 are: ");
        for (int i = 0; i<graph1.listOfNodes.get(3).neighbors.size(); i++){
            System.out.println(graph1.listOfNodes.get(3).neighbors.get(i).value);
        }

        System.out.println("\n\n");
        for (int i = 0; i<graph1.listOfNodes.size(); i++){
            System.out.println("size of neighbors of Node " + i + " is: " + graph1.listOfNodes.get(i).neighbors.size());
        }
